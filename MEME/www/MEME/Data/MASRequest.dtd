<!--
     Object: DTD For MEME application service requests.
     File:   $MEME_HOME/xml/MASRequest.dtd
     Author: Brian Carlsen
 
     Remarks:
             This DTD is used for parsing MASRequest documents
	     into MEMEServiceRequest objects.  These
	     objects are used by the MEMEApplicationClient and
	     MEMEApplicationServer for communicating over the
	     network

     Version Information (add to the top):

     05/29/2001 1.1:   DataSource tag added so clients can specify
                       the mid service they want to connect to.
		       default is "current-editing"
     05/01/2001 1.0:   First Version.

-->

<!--     Entity Declarations     -->

<!ENTITY % pcdata "(#PCDATA)">


<!--     Element Declarations     -->

<!--
    The MASRequest element must contain either a ServiceParameters
    section OR a ClientResponse section OR both 
-->
<!ELEMENT MASRequest (ConnectionInformation, SoftwareVersions?,
                      (ServiceParameters?, ClientResponse?)? ) >

<!ELEMENT ConnectionInformation (Session?, DataSource?, Authentication?, Timeout?, Idle?)>

<!-- 
    Session tags are empty, they are not containers.  
    The first time a session connects to the server it should specify
    either initiate="true" in which case a session id will be returned
    which should be re-used in the future, or nosession="true" which
    means that this client will not be reconnecting (e.g. for reports).
-->
<!ELEMENT Session EMPTY>
<!ATTLIST Session 
          id CDATA #IMPLIED
	  initiate (true | false) "false"
	  terminate (true | false) "false"
	  nosession (true | false) "false" >


<!-- 
    The DataSource tag is empty, it is not a container.
    The first time a session connects to the server, it should 
    specify the DB service name (the list returned by 
    gov.nih.nlm.meme.MIDServices.getDBServicesList()).
    If this tag is not supplied, the server will assume
    that the client should connect to "current-editing".
-->
<!ELEMENT DataSource EMPTY>
<!ATTLIST DataSource
          service CDATA #IMPLIED >

<!--
    The Authentication container was designed to support different
    kinds of authentication.  Initially, only username/password
    authentication will be supported.   The mode attribute of this
    element is used to indicate the "flavor" of authentication.
    Currently, only one mode is supported.
-->
<!ELEMENT Authentication (Username, Password)>
<!ATTLIST Authentication
          mode (user:password) #REQUIRED>

<!-- 
    When constructing the actual document, it is a good idea to
    wrap the contents of these two tags in <![CDATA[..]]> sections
    to prevent errors from illegal characters (&, <, >)
-->
<!ELEMENT Username %pcdata;>
<!ELEMENT Password %pcdata;>

<!--
    This element is used to specify how long the MEMEApplicationServer
    should keep session data around before cleaning up the resources.
    Time can be specified in seconds (recommended) or milliseconds
-->
<!ELEMENT Timeout EMPTY>
<!ATTLIST Timeout
          units (seconds | milliseconds) "seconds"
	  value CDATA #REQUIRED >

<!--
    This element is used to indicate that the request should be
    processed by the server's IdleServerThread handler.  This is
    a mechanism designed to delay processing of the request until
    the server has been idle for some amount of time.  Requests
    are processed in priority order so this attribute is required.
-->
<!ELEMENT Idle EMPTY>
<!ATTLIST Idle
          priority CDATA #REQUIRED>

<!--
    This container is used for reporting versions of current
    software components, and information regarding how to get
    required updates for components.  The contents of this 
    element are an Object element represent an Object[]
-->
<!ELEMENT SoftwareVersions (Object)>

<!--
    This container is used when a client sends a request to the server.
    It contains the name of the service and a list of parameters that
    the named service will know how to deal with.
-->
<!ELEMENT ServiceParameters (Service, Parameter*)>

<!ELEMENT Service %pcdata;>

<!-- 
    Parameter containers are used to send name/value pairs to a 
    MEMEApplicationService within the server.  The contents
    of this element will be an Object element representing
    a Parameter[].
-->
<!ELEMENT Parameter (Object) >

<!--
    This tag represents a java object.  It can contain sub Objects or
    Vars as fields.  The id/idref mechanism is used for pointer 
    equivalence when the container is reconstructed into an object.
    The length attribute is used for arrays.
   
    The id is not an ID because object IDs restart for each new
    Object, and idref is not an IDREF, however, in the application
    they should refer to each other.
-->
<!ELEMENT Object ANY >
<!ATTLIST Object
          name CDATA #REQUIRED
          class CDATA #IMPLIED
          id CDATA #IMPLIED
          idref CDATA #IMPLIED
          length CDATA #IMPLIED
	  null (true|false) "false"
          primitive (true | false) #IMPLIED >

<!--
    This tag represents a java primitive.  It contans PCDATA which
    is a string representation of the primitive value.
    Currently, this is not being used.
-->
<!ELEMENT Var EMPTY>
<!ATTLIST Var
          name CDATA #REQUIRED
	  value CDATA #REQUIRED>

<!--
    This tag is used to represent a null object. Typically it
    will be contained within an Object tag.
-->
<!ELEMENT Null %pcdata;>
<!ATTLIST Null
          name CDATA #REQUIRED>

<!--
    This container is used by the server when communicating a response
    back to the client.  It can either name required software udpates,
    throw exceptions or warnings, or return a list of values (this is
    the client analog to the Parameter mechanism for the server).
-->
<!ELEMENT ClientResponse (RequiredSoftwareUpdates?, Exception*, 
                          Warning*, ReturnValue*)>

<!--
    This container has the same structure as SoftwareVersions
    The contents of this element are an Object element represent an Object[]

-->
<!ELEMENT RequiredSoftwareUpdates (Object)>

<!--
    This container will contain Object tags reprsenting java 
    Exception objects.  These will be reconstructed by the client
    and then thrown to the client application
-->
<!ELEMENT Exception (Object*)>

<!--
    This container will contain Object tags representing
    gov.nih.nlm.meme.common.Warning objects.  They will be reconstructed
    by the MEMEApplicationClient and sent to the client application.
-->
<!ELEMENT Warning (Object*)>

<!--
    This container is exactly analagous to parameters for the 
    server.  The contents of this tag is an Object element
    representing a Parameter[]
-->
<!ELEMENT ReturnValue (Object)>
