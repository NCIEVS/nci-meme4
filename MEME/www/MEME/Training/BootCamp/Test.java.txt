import gov.nih.nlm.meme.*;
import gov.nih.nlm.util.*;
import java.io.*;
import java.util.*;

public class Test {

  /**
   * The main method performs a self-QA test
   * @param argv An array of argument.
   */
  public static void main (String[] argv) {
    try{

    System.out.println("-----------------------------------------------");
    System.out.println("Starting ... " + new Date());
    System.out.println("-----------------------------------------------");

    // Make a serializer
    ObjectXMLSerializer oxs = new ObjectXMLSerializer();

    // First, create an object.
    ArrayList ar = new ArrayList();

    // 1. String
    ar.add(new String("Test String \" end"));

    // 2. String[]
    String [] strs = new String [5];
    for(int i = 0 ;i < strs.length; i++)
      strs[i] = String.valueOf(i);
    ar.add(strs);

    // 3. Date
    ar.add(new Date());

    // 4. int[]
    int [] intarray = new int[5];
    for(int i = 0 ;i < intarray.length; i++)
      intarray[i] = i;
    ar.add(intarray);

    TestPrimitive t = new TestPrimitive();
    ar.add(t);

    System.out.println("\n\tStart with an arraylist:");
    System.out.println("\t-------------------------\n\t  "+ar);

    // Serialize the arraylist.
    BufferedWriter out = new BufferedWriter(new FileWriter( new File ("arraylist.xml")));
    System.out.println("\n\tArraylist document:\n\t-------------------");
    String doc = oxs.toXML(ar,"");
    System.out.println(doc);
    out.write(doc);
    out.close();

    System.out.println("\n\tTry reading the document: arraylist.xml");
    System.out.println("\t--------------------------------------------");

    //
    // Read arraylist back in
    //
    Object obj = oxs.fromXML("arraylist.xml",false);
    ArrayList ar2 = (ArrayList)obj;

    // 1.
    String string2 = (String) ar2.get(0);
    System.out.println("6. String \t" + string2);

    // 2.
    String[] strs2 = (String[])ar2.get(1);
    System.out.println("7. String[]");
    System.out.println("\tlength = " + strs.length);
    System.out.println("\tstrs[0] = " + strs[0]);
    System.out.println("\tstrs[1] = " + strs[1]);

    // 3.
    Date date2 = (Date) ar2.get(2);
    System.out.println("9. Date \t" + date2);

    // 4.
    int[] i2 = (int[]) ar2.get(3);
    System.out.println("11. int[]");
    System.out.println("\tlength = " + i2.length);
    for (int i = 0; i < i2.length; i++)
      System.out.println("\ti2[" + i + "] = " + i2[i]);

    // 5.
    t = (TestPrimitive)ar2.get(4);
    System.out.println(t.getPrimitiveValue());


    // Cleanup
    File f = new File("arraylist.xml");
    f.delete();

    System.out.println("-----------------------------------------------");
    System.out.println("Finished ... " + new Date());
    System.out.println("-----------------------------------------------");

    } catch (Exception e) {
      e.printStackTrace();
    }
  }


 /**
  * Example of a fake primitive value
  */
  public static class TestPrimitive implements gov.nih.nlm.util.ObjectXMLSerializer.Primitive {
    private Date d;
    private Date d2;
    public TestPrimitive() { d = new Date(); d2 = new Date();}
    public String getPrimitiveValue() { return d.getTime() + "|" + d2.getTime(); }
    public static TestPrimitive newInstance(String s) {
      String[] ss = FieldedStringTokenizer.split(s,"|");
      TestPrimitive t = new TestPrimitive();
      t.d =  new Date(Long.parseLong(ss[0]));
      t.d2 = new Date(Long.parseLong(ss[1]));
      return t;
    }

  }

}
