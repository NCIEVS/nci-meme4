exec MEME_UTILITY.drop_it('table','tjfw_in');
create table tjfw_in as
select a.atom_name, c.code from classes c, atoms a
where 1=2;


$MEME_HOME/bin/dump_mid.pl -t tjfw_in memedb .

cp SNOMED_Clinical_Diagnosis.txt tjfw_in.dat 
sqlldr mth/umls_tuttle@memedb -control=tjfw_in.ctl


-- parse out <code>_<source_aui> style codes

exec MEME_UTILITY.drop_it('table','tjfw_in_parsed');
create table tjfw_in_parsed as
select substr(code, 0, instr(code,'_')-1) as code, substr(code, instr(code,'_')+1) as source_aui,  atom_name from tjfw_in
where code like '%\_%' escape '\';

insert into tjfw_in_parsed
select code, '' as source_aui, atom_name
from tjfw_in
where code not like '%\_%' escape '\';

-- index for efficiency
create index x_tip_code on tjfw_in_parsed(code) compute statistics;

-- figure out which codes are missing (i.e., obsolete or otherwise gone) 
exec MEME_UTILITY.drop_it('table','tjfw_missing_codes');
create table tjfw_missing_codes as
select code from tjfw_in_parsed
minus
select code from classes
where source=(select current_name from source_version where source='SNOMEDCT')
and tobereleased in ('Y','y');

-- obtain CUI mappings for missing codes via UMLS/bac
exec MEME_UTILITY.drop_it('table','tjfw_map_missing_codes_cuis');
create table tjfw_map_missing_codes_cuis as select code,last_release_cui from classes where 1=2;

$MEME_HOME/bin/dump_mid.pl -t tjfw_map_missing_codes_cuis memedb .

cp cuis_for_missing.txt tjfw_map_missing_codes_cuis.dat
sqlldr mth/umls_tuttle@memedb -control='tjfw_map_missing_codes_cuis.ctl'


-- map the codes that match NCI Meta via code, and if applicable, source_aui
-- handle cases with source_aui first
exec MEME_UTILITY.drop_it('table','tjfw_map_pre_cid');
create table tjfw_map_pre_cid as
select distinct tip.code,tip.source_aui,tip.atom_name,c.last_release_cui,c.concept_id
from (select * from tjfw_in_parsed where source_aui is not null and code not in
          (select code from tjfw_missing_codes)) tip
left outer join
(select * from classes
 where source=(select current_name from source_version where source='SNOMEDCT')
 and tobereleased in ('Y','y')) c
on tip.code = c.code
and tip.source_aui = c.source_aui;

--handle cases without source_aui specified separately. they won't match if the SCT atom in classes has a source_aui.

insert into tjfw_map_pre_cid
select distinct tip.code,tip.source_aui,tip.atom_name,c.last_release_cui,c.concept_id
from (select * from tjfw_in_parsed where source_aui is null and code not in
          (select code from tjfw_missing_codes)) tip
left outer join
(select * from classes
 where source=(select current_name from source_version where source='SNOMEDCT')
 and tobereleased in ('Y','y')) c
on tip.code = c.code;

--manually handle 134209002_513786019 and 190818004_574447010
--code/source_aui pairs no longer match, but code appears to work fine.

update tjfw_map_pre_cid tmpc
set concept_id =
    (select distinct concept_id from classes c
     where tmpc.code = c.code
     and source=(select current_name from source_version where source='SNOMEDCT')
     and tobereleased in ('Y','y'))
where concept_id is null;

-- deal with obsolete/missing cases by joining with tjfw_map_missing_codes_cuis

exec MEME_UTILITY.drop_it('table','tjfw_map_pre_cui');
create table tjfw_map_pre_cui as
select distinct tip.code,tip.source_aui,tip.atom_name,tmm.last_release_cui
from (select * from tjfw_in_parsed where code in 
         (select code from tjfw_missing_codes)) tip
left outer join
tjfw_map_missing_codes_cuis tmm
on tip.code = tmm.code;

-- match those to concept_ids too
exec MEME_UTILITY.drop_it('table','tjfw_map_pre_cui_cid');
create table tjfw_map_pre_cui_cid as
select distinct tmpc.code,tmpc.source_aui,tmpc.atom_name,tmpc.last_release_cui,a.concept_id
from tjfw_map_pre_cui tmpc
left outer join
(select * from attributes
 where attribute_name='UMLSCUI') a
on tmpc.last_release_cui = a.attribute_value;

--some CUIs will be invalid. find and remove cases where code matched >1 CUI and one is valid.
delete from tjfw_map_pre_cui_cid where (code,last_release_cui) in
   (select code,last_release_cui from tjfw_map_pre_cui_cid
    where code in
        (select code from tjfw_map_pre_cui_cid where concept_id is not null)
    and last_release_cui in
        (select last_release_cui from tjfw_map_pre_cui_cid where concept_id is null));

-- put them all together
exec MEME_UTILITY.drop_it('table','tjfw_map_pre');
create table tjfw_map_pre as
select * from tjfw_map_pre_cid
union
select * from tjfw_map_pre_cui_cid;

create index x_tjfw_map_pre_cid on tjfw_map_pre (concept_id) compute statistics;

-- match to NCI
exec MEME_UTILITY.drop_it('table','tjfw_map_nci');
create table tjfw_map_nci as
select tmp.*, x.code as nci_code, x.tty as nci_tty, x.atom_name as nci_name from tjfw_map_pre tmp
left outer join
(select c.concept_id, c.code, c.tty, a.atom_name
 from classes c, atoms a
 where source=(select current_name from source_version where source='NCI')
 and tobereleased in ('Y','y')
 and a.atom_id = c.atom_id
 and c.tty in ('PT')) x
on tmp.concept_id = x.concept_id;

exec MEME_UTILITY.drop_it('table','tjfw_out_pre');
create table tjfw_out_pre as
select code, source_aui, atom_name, nci_code, nci_name from tjfw_map_nci order by code,source_aui;

-- set code back to code_source_aui where applicable
update tjfw_out_pre set code=code||'_'||source_aui
where source_aui is not null;

exec MEME_UTILITY.drop_it('table','tjfw_out');
create table tjfw_out as
select code,atom_name,nci_code,nci_name from tjfw_out_pre order by nvl(nci_code,'D12345'),code;

-- handle CBM cases
drop table tjfw_in_cbm;
create table tjfw_in_cbm as select atom_name cbm_name, code nci_code, last_release_cui, code sct_code from atoms a, classes c where 1=2;

dump_mid.pl -t tjfw_in_cbm memedb .
cp CBM_SNOMED_Map.txt tjfw_in_cbm.dat
sqlldr mth/umls_tuttle@memedb -control=tjfw_in_cbm.ctl

drop table tjfw_out_cbm;
create table tjfw_out_cbm as 
select distinct cbm_name, cbm.nci_code as cbm_nci_code, cbm.last_release_cui, t.code as new_sct_code, t.atom_name new_sct_name
from tjfw_in_cbm cbm
left outer join
tjfw_out t
on
t.nci_code = cbm.nci_code;

dump_mid.pl -t tjfw_out_cbm memedb .
